<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Stickers by Feeligo</hook_name>
      <hook_desc>Lets users add beautiful stickers to their posts</hook_desc>
      <hook_author>Feeligo</hook_author>
      <hook_email>tech@feeligo.com</hook_email>
      <hook_website>http://www.feeligo.com/stickers</hook_website>
      <hook_update_check>http://stickers.feeligo.com/forums/ipb/latest?product=flgstickers</hook_update_check>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:1:{s:6:"forums";a:3:{s:8:"app_name";s:6:"Forums";s:11:"min_version";i:32003;s:11:"max_version";i:0;}}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0.2</hook_version_human>
      <hook_version_long>1.0.2</hook_version_long>
      <hook_extra_data/>
      <hook_key>flgstickers</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>flgstickers.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>FeeligoStickers</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:12:"skin_editors";s:12:"skinFunction";s:6:"editor";s:4:"type";s:2:"if";s:2:"id";s:10:"showEditor";s:8:"position";s:12:"post.startif";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class FeeligoStickers {
  protected $registry;


  public function __construct() {
    $this->registry = ipsRegistry::instance();
  }


  public function getOutput() {
    return;
  }


  public function replaceOutput($output, $key) {
    $template = $this->registry->output->getTemplate('editors'); 
    $functionData = $template->functionData['editor'];
        //var_dump($this->registry->class_localization);
    if (is_array($functionData) && count($functionData)) {
      // insert the JS loader right after the <body> tag
      $output = $this->insert_loader_js($output);
    }
    return $output;
  }


  // returns the ID of the authenticated user, null if no user
  protected function _current_user_id() {
    $d = $this->registry->member()->fetchMemberData();
    return isset($d['member_id']) && ($id = $d['member_id']) > 0 ? $id : null;
  }


  // inserts the loader JS and returns the modified $output
  protected function insert_loader_js($output) {
    // locate the opening <body> tag and insert right after it
    $pos = $this->_pos_after($output, '<body', '>');
    if ($pos !== false) {
      $output = $this->_insert_at($output, $this->_loader_js(), $pos);
    } else {
      $output .= $this->_error_html('could not find opening body tag');
    }
    return $output;
  }


  // returns a HTML comment used to display an error message
  // (useful for debugging and support intervention)
  private function _error_html($message) {
    return "\n<!--flg:error $message -->\n";
  }


  // returns i+1 where i is the position of the last character of $beg,
  // or the last character of the first occurrence of $end after $beg,
  // search starts at $last
  private function _pos_after($str, $beg, $end = null, $last = null) {
    $pos = strpos($str, $beg, $last ? $last : 0);
    if ($pos !== false) {
      $pos += strlen($beg);
      if ($end) {
        return $this->_pos_after($str, $end, null, $pos);  
      }
    }
    return $pos;
  }


  // inserts $new into $str at position $pos
  private function _insert_at($str, $new, $pos) {
    return substr_replace($str, $new, $pos, 0);
  }


  // the loader JS script which gets added to the page
  private function _loader_js() {
    $p_name = 'ipb';
    $p_version = IPB_VERSION;
    $f_host = defined('FLG_HOST') ? FLG_HOST : 'stickersapp.feeligo.com';
    $uid = ($uid = $this->_current_user_id()) !== null ? $uid : '';
    $js = <<<FLGJS
(function(f,ee,l,i,g,o){f[l]=f[l]||{};o&&(o+='').length?(f[l].context={
viewer:{id:o},platform:{name:i,version:g}})&&(o='-'+o):(o='');
(function(s,t,k,r){t=ee.createElement(r='script');
k=ee.getElementsByTagName(r)[0];t.async=1;t.src=s;k.parentNode.insertBefore(t,k);
})('http://$f_host/'+ee.location.hostname+'/loader'+o+'.js');
f[l].q=[];f[l].on=function(s,t){f[l].q.push([s,t])}
})(window,document,'flg','$p_name','$p_version','$uid');
FLGJS;
    return "<script type=\"text/javascript\">$js</script>";
  }

}
]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_replacements/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
